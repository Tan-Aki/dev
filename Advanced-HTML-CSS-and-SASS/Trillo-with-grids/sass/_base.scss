:root {
  --c-prim: #eb2f64;
  --c-prim-light: #ff3366;
  --c-prim-dark: #ba265d;

  --c-grey-light-1: #faf9f9;
  --c-grey-light-2: #f4f2f2;
  --c-grey-light-3: #f0eeee;
  --c-grey-light-4: #ccc;

  --c-grey-dark-1: #333;
  --c-grey-dark-2: #777;
  --c-grey-dark-3: #999;

  --shadow-dark: 0 2rem 6rem rgba(0, 0, 0, 0.3);
  --shadow-light: 0 2rem 5rem rgba(0, 0, 0, 0.1);

  --line: 1px solid var(--c-grey-light-2);
}

// responsive breakpoints
$bp-largest: 75em; // 1200 px    1200/16
$bp-large: 62.5em; // 1000 px    1000/16
$bp-medium: 50em; // 800 px
$bp-small: 37.5em; // 600 px

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  // The box-sizing property allows us to include the padding and border in an element's total width and height.
  font-size: 62.5%; // 10px
}

body {
  font-family: "Open Sans", sans-serif;
  font-weight: 400;
  line-height: 1.6;
  //   color: var(--c-grey-dark-2);
  color: #333;
  background-image: linear-gradient(to right bottom, olive, #556b2f);
  background-size: cover;
  background-repeat: no-repeat;
  min-height: 100vh;
  & > * {
    border: solid 1px #333;
    font-size: 1.6rem;
  }
}

.main {
  display: grid;
  margin-top: 7rem;
  grid-template-columns: 15rem repeat(11, minmax(min-content, 1fr));
  // grid-template-columns: 12vw repeat(11, minmax(min-content, 1fr));
  // grid-auto-rows: minmax((8rem, auto));

  & > * {
    border: solid 1px #333;
    font-size: 1.6rem;
  }

  @media only screen and (max-width: $bp-medium) {
    grid-template-columns: repeat(12, minmax(min-content, 1fr));
    margin-top: 5rem;
  }
}

.header {
  grid-column: 1 / -1;
  padding: 1.5rem;
  position: fixed;
  width: 100%;
  height: 7rem;
  top: 0px; // https://stackoverflow.com/questions/38679945/why-is-an-element-with-position-fixed-moving-with-a-non-positioned-sibling
  background-image: linear-gradient(to right bottom, olive, #556b2f);
  display: flex;
  align-items: center;

  @media only screen and (max-width: $bp-medium) {
    height: 5rem;
    padding: 0.5rem;
    padding-left: 1rem;
  }

  h1 {
    margin-left: 2rem;
  }
}

.sidebar {
  position: fixed;
  // grid-row: 2 / 4;
  // padding: 3rem;
  margin-top: 7rem;
  width: 15rem;
  height: 100%;
  display: inline-block;
  top: 0px; // https://stackoverflow.com/questions/38679945/why-is-an-element-with-position-fixed-moving-with-a-non-positioned-sibling
  background-image: linear-gradient(to right bottom, olive, #556b2f);

  @media only screen and (max-width: $bp-medium) {
    display: none;
    margin-top: 5rem;
  }
}

.nav-btn {
  border: none;
  border-radius: 0;

  background-color: #333;
  height: 2px;
  width: 3rem;

  // margin-top: 2rem;

  &::before,
  &::after {
    background-color: #333;
    height: 2px;
    width: 3rem;
    content: "";
    display: block;
  }
  &::before {
    transform: translateY(-1rem);
  }
  &::after {
    transform: translateY(1rem);
  }
}

.footer {
  margin-left: 15rem;
  padding: 3rem;

  @media only screen and (max-width: $bp-medium) {
    margin-left: 0rem;
  }
}
.gallery {
  grid-column: 2 / -1;
  display: flex;

  &__item {
    width: 33.3333%;
  }
  &__photo {
    // object-fit: cover;
    width: 100%;
    // max-height: 100%;
    display: block;
  }

  @media only screen and (max-width: $bp-medium) {
    grid-column: 1 / -1;
  }
}

.overview {
  grid-column: 2 / -1;

  @media only screen and (max-width: $bp-medium) {
    grid-column: 1 / -1;
  }

  padding: 1.5rem;
}

.content {
  grid-column: 2 / -1;

  display: grid;
  grid-template-columns: 2fr 1fr;
  grid-gap: 3rem;

  & > * {
    border: solid 1px #333;
  }

  @media only screen and (max-width: $bp-large) {
    grid-template-columns: auto;
  }

  @media only screen and (max-width: $bp-medium) {
    grid-column: 1 / -1;
  }
}
.description {
  padding: 1.5rem;
}

.reviews {
  display: grid;
  grid-template-rows: repeat(2, 3fr) 1fr;
  grid-gap: 1.5rem;
  align-items: center;

  & > * {
    border: solid 1px #333;
  }

  @media only screen and (max-width: $bp-large) {
    // grid-column: 1 / -1;

    grid-template-rows: auto;
    grid-auto-rows: minmax(8rem, min-content);

    grid-template-columns: repeat(auto-fit, minmax(29rem, 1fr));
  }
}

.btn-inline {
  justify-self: center;

  @media only screen and (max-width: $bp-large) {
    grid-column: 1 / -1;
  }

  padding: 1rem;
}

.review {
  padding: 1.5rem;
  &__text {
  }

  &__user {
  }

  &__photo {
  }

  &__user-box {
  }
  &__user-name {
  }
  &__user-date {
  }
  &__user-rating {
  }
}

.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 2rem;

  &__item {
    // &:not(:last-child) {
    //   // margin-bottom: 0.5rem;
    // }
  }

  &__item:hover {
    background-color: var(--c-prim-light);
  }

  &__link:link,
  &__link:visited {
    color: inherit;
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem;

    display: flex;
    align-items: center;
  }

  &__icon {
    height: 1.75rem;
    width: 1.75rem;
    margin-right: 1rem;
    fill: currentColor;
  }
}

.cta {
  grid-column: 2 / -1;

  padding: 3rem;

  @media only screen and (max-width: $bp-medium) {
    grid-column: 1 / -1;
  }
}

// .container {
//   display: grid;
//   grid-template-rows: 80vh min-content 40vw repeat(3, min-content);
//   // grid-template-rows: repeat(6, auto);

//   grid-template-columns:
//     [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr)
//     [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end]
//     minmax(6rem, 1fr) [full-end];
//   // we use the 1fr trick on each side of the grid, so that the other tracks are "centered"

//   @media only screen and (max-width: $bp-large) {
//     grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);

//     grid-template-columns:
//       [full-start] minmax(6rem, 1fr) [center-start]
//       repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end]
//       minmax(6rem, 1fr) [full-end];
//   }

//   @media only screen and (max-width: $bp-medium) {
//     grid-template-rows: 6rem calc(100vh - 6rem);

//     // same as above
//     // grid-template-rows: 6rem calc(100vh - 6rem) min-content min-content min-content
//     // 	repeat(3, min-content);
//   }
// }
