{"version":3,"sources":["components/Order/Order.module.scss","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","console","log","ingredients","ingredientsSummary","Object","keys","map","igKey","key","style","textTransform","display","margin","border","padding","className","classes","Order","price","toFixed","connect","state","orders","orderReducer","loading","token","authReducer","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","Spinner","id","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,sFCkCXC,EA/BD,SAACC,GACbC,QAAQC,IAAI,oBAAqBF,EAAMG,aACvC,IAAMC,EAAqBC,OAAOC,KAAKN,EAAMG,aAAaI,KAAI,SAACC,GAC7D,OACE,0BACEC,IAAKD,EACLE,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,QAGVP,EAVH,MAUaR,EAAMG,YAAYK,OAKnC,OACE,yBAAKQ,UAAWC,IAAQC,OACtB,4CAAkBd,GAClB,qCACS,wCAAcJ,EAAMmB,MAAMC,QAAQ,O,+BCyDlCC,uBAfS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,aAAaD,OAC3BE,QAASH,EAAME,aAAaC,QAC5BC,MAAOJ,EAAMK,YAAYD,MACzBE,OAAQN,EAAMK,YAAYC,WAIH,SAACC,GAC1B,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAR,OAAmBC,EAASE,IAAoBL,EAAOE,QAI3DP,CAA6CW,aAjC7C,SAAChC,GAKdiC,qBAAU,WACRjC,EAAM8B,cAAc9B,EAAM0B,MAAO1B,EAAM4B,UACtC,IAEH,IAAIL,EAAS,kBAACW,EAAA,EAAD,MAMb,OALKlC,EAAMyB,UACTF,EAASvB,EAAMuB,OAAOhB,KAAI,SAACR,GAAD,OACxB,kBAACmB,EAAD,CAAOT,IAAKV,EAAMoC,GAAIhC,YAAaJ,EAAMI,YAAagB,MAAOpB,EAAMoB,YAGhE,6BAAMI,KAkBsEa","file":"static/js/5.dfe3aea3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__EbaF-\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./Order.module.scss\";\n\nconst order = (props) => {\n  console.log(\"props.ingredients\", props.ingredients);\n  const ingredientsSummary = Object.keys(props.ingredients).map((igKey) => {\n    return (\n      <span\n        key={igKey}\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\",\n        }}\n      >\n        {igKey} : {props.ingredients[igKey]}\n      </span>\n    );\n  });\n\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients : {ingredientsSummary}</p>\n      <p>\n        Price: <strong> USD {props.price.toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\norder.propTypes = {};\n\nexport default order;\n\n// import React from \"react\";\n\n// import classes from \"./Order.module.scss\";\n\n// const order = (props) => {\n//   const ingredients = [];\n\n//   for (let ingredientName in props.ingredients) {\n//     ingredients.push({\n//       name: ingredientName,\n//       amount: props.ingredients[ingredientName],\n//     });\n//   }\n\n//   const ingredientOutput = ingredients.map((ig) => {\n//     return (\n//       <span\n//         style={{\n//           textTransform: \"capitalize\",\n//           display: \"inline-block\",\n//           margin: \"0 8px\",\n//           border: \"1px solid #ccc\",\n//           padding: \"5px\",\n//         }}\n//         key={ig.name}\n//       >\n//         {ig.name} ({ig.amount})\n//       </span>\n//     );\n//   });\n\n//   return (\n//     <div className={classes.Order}>\n//       <p>Ingredients: {ingredientOutput}</p>\n//       <p>\n//         Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\n//       </p>\n//     </div>\n//   );\n// };\n\n// export default order;\n","// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import Order from \"../../components/Order/Order\";\n// import axios from \"../../axios-orders\";\n// import withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n// import Spinner from \"../../components/UI/Spinner/Spinner\";\n\n// import * as actions from \"../../store/actions/index\";\n\n// class Orders extends Component {\n//   componentDidMount() {\n//     this.props.onFetchedOrders(this.props.token, this.props.userId);\n//   }\n\n//   render() {\n//     let orders = <Spinner />;\n//     if (!this.props.loading) {\n//       orders = (\n//         <div>\n//           {this.props.orders.map((order) => (\n//             <Order key={order.id} ingredients={order.ingredients} price={+order.price} />\n//           ))}\n//         </div>\n//       );\n//     }\n//     return orders;\n//   }\n// }\n\n// const mapStateToProps = (state) => ({\n//   orders: state.orderReducer.orders,\n//   loading: state.orderReducer.loading,\n//   token: state.authReducer.token,\n//   userId: state.authReducer.userId,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onFetchedOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n\nimport React, { Component, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../store/actions/index\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nconst Orders = (props) => {\n  // componentDidMount() {\n  //   this.props.onFetchOrders(this.props.token, this.props.userId);\n  // }\n\n  useEffect(() => {\n    props.onFetchOrders(props.token, props.userId);\n  }, []);\n\n  let orders = <Spinner />;\n  if (!props.loading) {\n    orders = props.orders.map((order) => (\n      <Order key={order.id} ingredients={order.ingredients} price={order.price} />\n    ));\n  }\n  return <div>{orders}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.orderReducer.orders,\n    loading: state.orderReducer.loading,\n    token: state.authReducer.token,\n    userId: state.authReducer.userId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n// export default withErrorHandler(connect(mapStateToProps, mapDispatchToProps)(Orders), axios);\n"],"sourceRoot":""}