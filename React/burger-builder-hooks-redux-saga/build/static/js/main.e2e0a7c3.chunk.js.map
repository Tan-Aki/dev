{"version":3,"sources":["store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/auth.js","store/actions/order.js","components/Burger/BurgerIngredient/BurgerIngredient.module.scss","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.scss","components/Burger/BuildControls/BuildControl/BuildControl.module.scss","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.scss","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.scss","components/Burger/BuildControls/BuildControls.module.scss","components/UI/Modal/Modal.module.scss","components/UI/Button/Button.module.scss","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","hooks/http-error-handler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.scss","assets/images/burger-logo.png","components/Logo/Logo.module.scss","components/Navigation/NavigationItems/NavigationItems.module.scss","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/Burger/Burger.module.scss","components/UI/Spinner/Spinner.module.scss","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducer/burgerBuilder.js","store/reducer/order.js","store/reducer/auth.js","store/sagas/auth.js","store/sagas/burgerBuilder.js","store/sagas/order.js","store/sagas/index.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENT","FETCH_INGREDIENTS_FAILED","RESET_TOTAL_PRICE","INIT_INGREDIENTS","PURCHASE_BURGER","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","FETCH_ORDERS","AUTH_START","AUTH_USER","AUTH_CHECK_STATE","AUTH_SUCCESS","AUTH_FAIL","AUTH_CHECK_TIMEOUT","AUTH_INITIATE_LOGOUT","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","setIngredients","ingredients","fetchIngredientsFailed","resetTotalPrice","initIngredients","authStart","authSuccess","idToken","userId","authFail","error","logout","logoutSucceed","checkAuthTimeout","expirationTime","auth","email","password","isSignup","setAuthRedirectPath","path","authCheckState","purchaseBurgerSuccess","id","orderData","orderId","purchaseBurgerFail","purchaseBurgerStart","console","log","purchaseInit","purchaseBurger","token","fetchOrdersSuccess","orders","fetchOrdersFail","fetchOrdersStart","fetchOrders","module","exports","instance","axios","create","baseURL","backdrop","props","show","className","classes","Backdrop","onClick","clicked","React","memo","assignedClasses","Modal","push","isHidden","modalClosed","join","children","prevProps","nextProps","Button","disabled","btnType","spinner","Loader","withErrorHandler","WrappedComponent","httpClient","useState","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","useEffect","eject","useHttpErrorHandler","errorConfirmedHandler","message","burgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","withRouter","transformedIngredients","Object","keys","map","igKey","Array","_","i","BurgerIngredient","key","reduce","acc","el","length","Burger","logo","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","activeClassName","active","exact","to","link","navigationItems","NavigationItems","isAuthenticated","drawerToogle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","connect","state","authReducer","showSideDrawer","setShowSideDrawer","prevShowSideDrawer","Content","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","OrderButton","ordered","OrderSummary","ingredientsSummary","textTransform","purchaseCancelled","purchaseContinued","purchasing","setPurchasing","ings","useSelector","burgerBuilderReducer","totalPrice","dispatch","useDispatch","onInitIngredients","useCallback","actions","onResetTotalPrice","purchaseCancelHandler","disabledInfo","orderSummary","burger","Spinner","ingName","history","onLogout","Checkout","lazy","Orders","Auth","onTryAutoSignup","routes","component","BurgerBuilder","Logout","fallback","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","updatePurchaseState","values","some","amount","action","updatedIngs","reducer","updatedIngs2","loading","purchased","authRedirectPath","authLogout","logoutSaga","checkAuthTimeoutSaga","authUserSaga","authCheckStateSaga","call","localStorage","put","delay","authData","returnSecureToken","url","post","Date","getTime","data","expiresIn","expirationDate","setItem","localId","getItem","initIngredientsSaga","get","purchaseBurgerSaga","fetchOrdersSaga","queryParams","fetchedOrders","hasOwnProperty","watchAuth","watchBurgerBuilder","watchOrder","all","takeEvery","takeLatest","composeEnhancers","compose","rootReducer","combineReducers","orderReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","thunk","run","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e2e0a7c3.chunk.js","sourcesContent":["export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENT = \"SET_INGREDIENT\";\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\nexport const RESET_TOTAL_PRICE = \"RESET_TOTAL_PRICE\";\nexport const INIT_INGREDIENTS = \"INIT_INGREDIENTS\";\n\nexport const PURCHASE_BURGER = \"PURCHASE_BURGER\";\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\nexport const FETCH_ORDERS = \"FETCH_ORDERS\";\n\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_USER = \"AUTH_USER\";\nexport const AUTH_CHECK_STATE = \"AUTH_CHECK_STATE\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_CHECK_TIMEOUT = \"AUTH_CHECK_TIMEOUT\";\nexport const AUTH_INITIATE_LOGOUT = \"AUTH_INITIATE_LOGOUT\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\n","import * as actionTypes from \"./actionTypes\";\n\nexport const addIngredient = (name) => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName: name,\n  };\n};\nexport const removeIngredient = (name) => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName: name,\n  };\n};\n\nexport const setIngredients = (ingredients) => {\n  return {\n    type: actionTypes.SET_INGREDIENT,\n    ingredients: ingredients,\n  };\n};\n\nexport const fetchIngredientsFailed = () => {\n  return {\n    type: actionTypes.FETCH_INGREDIENTS_FAILED,\n  };\n};\n\nexport const resetTotalPrice = () => {\n  return {\n    type: actionTypes.RESET_TOTAL_PRICE,\n  };\n};\n\nexport const initIngredients = () => {\n  return {\n    type: actionTypes.INIT_INGREDIENTS,\n  };\n};\n","import * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (idToken, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken,\n    userId,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_INITIATE_LOGOUT,\n  };\n};\n\nexport const logoutSucceed = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return {\n    type: actionTypes.AUTH_CHECK_TIMEOUT,\n    expirationTime: expirationTime,\n  };\n};\n\nexport const auth = (email, password, isSignup) => {\n  return {\n    type: actionTypes.AUTH_USER,\n    email,\n    password,\n    isSignup,\n  };\n};\n\nexport const setAuthRedirectPath = (path) => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path,\n  };\n};\n\nexport const authCheckState = () => {\n  return {\n    type: actionTypes.AUTH_CHECK_STATE,\n  };\n};\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData,\n  };\n};\nexport const purchaseBurgerFail = (error) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error,\n  };\n};\nexport const purchaseBurgerStart = () => {\n  console.log(\"purchase burger start\");\n  return {\n    type: actionTypes.PURCHASE_BURGER_START,\n  };\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT,\n  };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER,\n    orderData,\n    token,\n  };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders,\n  };\n};\n\nexport const fetchOrdersFail = (error) => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START,\n  };\n};\n\n// DATA formatting change should be in action creators\n// it's not a \"logic\" that should be in the reducer\n// also, instead of passing the token as a param, we could also use the getstate() method\n// like getstate().authReducer.token\n// but it's not to use the getstate too much.\nexport const fetchOrders = (token, userId) => {\n  return {\n    type: actionTypes.FETCH_ORDERS,\n    token,\n    userId,\n  };\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__31RCp\",\"BreadTop\":\"BurgerIngredient_BreadTop__3uZiA\",\"Seeds1\":\"BurgerIngredient_Seeds1__2bISE\",\"Seeds2\":\"BurgerIngredient_Seeds2__nxu_j\",\"Meat\":\"BurgerIngredient_Meat__3LLN1\",\"Cheese\":\"BurgerIngredient_Cheese__OiKGr\",\"Salad\":\"BurgerIngredient_Salad__wNpzg\",\"Bacon\":\"BurgerIngredient_Bacon__dxIXe\"};","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://burger-builder-e7569.firebaseio.com/\",\n});\n\nexport default instance;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__LnUMG\",\"Open\":\"SideDrawer_Open__1pWGy\",\"Close\":\"SideDrawer_Close__2SaEA\",\"Logo\":\"SideDrawer_Logo__3zgsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2w8W6\",\"Label\":\"BuildControl_Label__14Z0p\",\"Less\":\"BuildControl_Less__2yb4l\",\"More\":\"BuildControl_More__2A_d3\"};","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport classes from \"./Backdrop.module.scss\";\n\nconst backdrop = props => {\n  return props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null;\n};\n\n// backdrop.propTypes = {};\n\nexport default backdrop;\n","import React, { Fragment, Component, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./Modal.module.scss\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nconst Modal = (props) => {\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   // if (nextProps.show !== this.props.show) return true;\n  //   // return false;\n  //   // return nextProps.show !== this.props.show;\n\n  //   return (\n  //     nextProps.show !== this.props.show ||\n  //     (this.props.show && nextProps.children !== this.props.children)\n  //   );\n  //   //Check if visibility changes  OR  (is visible  AND  content changes):\n  // }\n\n  // componentWillUpdate(nextProps, nextState) {\n  //   console.log(\"Modal will update\");\n  // }\n\n  const assignedClasses = [classes.Modal];\n  if (!props.show) assignedClasses.push(classes.isHidden);\n\n  return (\n    <Fragment>\n      <Backdrop show={props.show} clicked={props.modalClosed} />\n      <div className={assignedClasses.join(\" \")}>{props.children}</div>\n    </Fragment>\n  );\n};\n\nModal.propTypes = {};\n\nexport default React.memo(\n  Modal,\n  (prevProps, nextProps) =>\n    nextProps.show === prevProps.show && nextProps.children === prevProps.children\n);\n\n//Until now we checked: should the component be updated (= re-render required)?\n\n// From now on we check the opposite: should the component be memoized (= re-render not required)?\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1XByl\",\"Logo\":\"Toolbar_Logo__280B3\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1H-Bs\"};","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport classes from \"./Button.module.scss\";\n\nconst Button = (props) => {\n  return (\n    <button\n      disabled={props.disabled}\n      className={[classes.Button, classes[props.btnType]].join(\" \")}\n      onClick={props.clicked}\n    >\n      {props.children}\n    </button>\n  );\n};\n\n// Button.propTypes = {};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1eVc8\",\"active\":\"NavigationItem_active__3i0Bk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1lhFT\",\"OrderButton\":\"BuildControls_OrderButton__2liXG\",\"enable\":\"BuildControls_enable__1JPtJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__31OI7\",\"isHidden\":\"Modal_isHidden__Qk3n2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"Success\":\"Button_Success__34PY3\",\"Danger\":\"Button_Danger__2nfno\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./Spinner.module.scss\";\n\nconst spinner = (props) => {\n  return <div className={classes.Loader}>Loading...</div>;\n};\n\nspinner.propTypes = {};\n\nexport default spinner;\n","import React, { Component, Fragment, useState, useEffect, useLayoutEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport useHttpErrorHandler from \"../../hooks/http-error-handler\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return (props) => {\n    const [error, errorConfirmedHandler] = useHttpErrorHandler(axios);\n\n    // const reqInterceptor = useRef();\n    // const resInterceptor = useRef();\n\n    // if (reqInterceptor.current || resInterceptor.current) {\n    //   console.log(\"eject current req\");\n    //   axios.interceptors.request.eject(reqInterceptor);\n    //   axios.interceptors.response.eject(resInterceptor);\n    // }\n\n    // reqInterceptor.current = axios.interceptors.request.use((req) => {\n    //   // setState({ error: null });\n    //   console.log(\"req + setstate\", req);\n    //   setError(null);\n    //   return req;\n    // });\n\n    // resInterceptor.current = axios.interceptors.response.use(\n    //   (res) => {\n    //     console.log(\"res\", res);\n    //     return res;\n    //   },\n    //   (err) => {\n    //     setError(err);\n    //     console.log(\"err\", err);\n    //   }\n    // );\n\n    // useLayoutEffect(() => {\n    //   console.log(\"Use Layout Effect\");\n    // }, []);\n\n    // useLayoutEffect(() => {\n\n    //   return () => {\n    //     axios.interceptors.request.eject(reqInterceptor);\n    //     axios.interceptors.response.eject(resInterceptor);\n    //     console.log(\"removing req/res interceptors\");\n    //   };\n    // });\n\n    // useEffect(() => {\n    //   return () => {};\n    // });\n\n    return (\n      <Fragment>\n        <Modal show={error} modalClosed={errorConfirmedHandler}>\n          {error ? error.message : null}\n        </Modal>\n        <WrappedComponent {...props} />\n      </Fragment>\n    );\n  };\n};\n\nwithErrorHandler.propTypes = {};\n\nexport default withErrorHandler;\n","import { useState, useEffect } from \"react\";\n\nexport default (httpClient) => {\n  const [error, setError] = useState(null);\n\n  const reqInterceptor = httpClient.interceptors.request.use((req) => {\n    // setState({ error: null });\n    console.log(\"req + seterror\", req);\n    setError(null);\n    return req;\n  });\n\n  const resInterceptor = httpClient.interceptors.response.use(\n    (res) => {\n      console.log(\"res\", res);\n      return res;\n    },\n    (err) => {\n      setError(err);\n      console.log(\"err\", err);\n    }\n  );\n  console.log(\"configuring req/res interceptors\");\n\n  useEffect(() => {\n    return () => {\n      httpClient.interceptors.request.eject(reqInterceptor);\n      httpClient.interceptors.response.eject(resInterceptor);\n      console.log(\"removing req/res interceptors\");\n    };\n  });\n\n  const errorConfirmedHandler = () => {\n    setError(null);\n  };\n\n  return [error, errorConfirmedHandler];\n};\n","import React from \"react\";\nimport classes from \"./BurgerIngredient.module.scss\";\nimport PropTypes from \"prop-types\";\n\nconst burgerIngredient = props => {\n  let ingredient = null;\n\n  switch (props.type) {\n    case \"bread-bottom\":\n      ingredient = <div className={classes.BreadBottom}></div>;\n      break;\n\n    case \"bread-top\":\n      ingredient = (\n        <div className={classes.BreadTop}>\n          <div className={classes.Seeds1}></div>\n          <div className={classes.Seeds2}></div>\n        </div>\n      );\n      break;\n\n    case \"meat\":\n      ingredient = <div className={classes.Meat}></div>;\n      break;\n\n    case \"cheese\":\n      ingredient = <div className={classes.Cheese}></div>;\n      break;\n\n    case \"salad\":\n      ingredient = <div className={classes.Salad}></div>;\n      break;\n\n    case \"bacon\":\n      ingredient = <div className={classes.Bacon}></div>;\n      break;\n\n    default:\n      ingredient = null;\n  }\n\n  return ingredient;\n};\n\nburgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default burgerIngredient;\n","import React, { useEffect } from \"react\";\n\nimport { withRouter } from \"react-router-dom\";\nimport classes from \"./Burger.module.scss\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst burger = (props) => {\n  console.log(props);\n  let transformedIngredients = Object.keys(props.ingredients).map((igKey) => {\n    return [...Array(props.ingredients[igKey])].map((_, i) => {\n      return <BurgerIngredient key={igKey + i} type={igKey} />;\n    });\n  });\n\n  const sum = transformedIngredients.reduce((acc, el) => acc + el.length, 0);\n\n  if (sum <= 0) {\n    transformedIngredients = <p> Please add some ingredients </p>;\n  }\n  // console.log(\"sum\", sum);\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default withRouter(burger);\n\n// withRouter to get the route props (match and location and blablabla) in the component, coming from the father component route\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3OgXS\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__d04QA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2YZH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3W8DC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1R9Jj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1Vve3\",\"load2\":\"Spinner_load2__MgRZO\"};","import React from \"react\";\n// import PropTypes from 'prop-types'\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\nimport classes from \"./Logo.module.scss\";\n\nconst logo = props => {\n  return (\n    <div className={classes.Logo} style={{ height: props.height }}>\n      {/* className={`${classes.Logo} ${props.height === \"50%\" ? classes.Twenty : null}`} */}\n\n      <img src={burgerLogo} alt=\"Burger Logo\" />\n    </div>\n  );\n};\n\n// logo.propTypes = {};\n\nexport default logo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./NavigationItem.module.scss\";\nimport { NavLink } from \"react-router-dom\";\n\nconst navigationItem = (props) => {\n  return (\n    <li className={classes.NavigationItem}>\n      <NavLink activeClassName={classes.active} exact to={props.link}>\n        {/* for the activeClassname probleme with css modules. See lecture 229 : Implementing Navigation Links */}\n        {props.children}\n      </NavLink>\n    </li>\n  );\n};\n\nnavigationItem.propTypes = {};\n\nexport default navigationItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./NavigationItems.module.scss\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nconst navigationItems = (props) => {\n  return (\n    <ul className={classes.NavigationItems}>\n      <NavigationItem link=\"/\">Burger Builder</NavigationItem>\n      {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\n      {props.isAuthenticated ? (\n        <NavigationItem link=\"/logout\">Logout </NavigationItem>\n      ) : (\n        <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n      )}\n    </ul>\n  );\n};\n\nnavigationItems.propTypes = {};\n\nexport default navigationItems;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./DrawerToggle.module.scss\";\n\nconst drawerToogle = props => {\n  return (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\ndrawerToogle.propTypes = {};\n\nexport default drawerToogle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./Toolbar.module.scss\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\n\nconst toolbar = (props) => {\n  return (\n    <header className={classes.Toolbar}>\n      <DrawerToggle clicked={props.drawerToggleClicked} />\n      <div className={classes.Logo}>\n        {/* <Logo height=\"80%\" /> */}\n        <Logo />\n      </div>\n      <nav className={classes.DesktopOnly}>\n        <NavigationItems isAuthenticated={props.isAuth} />\n      </nav>\n    </header>\n  );\n};\n\ntoolbar.propTypes = {};\n\nexport default toolbar;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport classes from \"./SideDrawer.module.scss\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nconst sideDrawer = (props) => {\n  let attachedClasses = [classes.SideDrawer, classes.Close];\n  if (props.open) {\n    attachedClasses = [classes.SideDrawer, classes.Open];\n  }\n  return (\n    <Fragment>\n      <Backdrop show={props.open} clicked={props.closed} />\n      <div className={attachedClasses.join(\" \")} onClick={props.closed}>\n        <div className={classes.Logo}>\n          {/* <Logo height = \"11%\"/> */}\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n      </div>\n    </Fragment>\n  );\n};\n\nsideDrawer.propTypes = {};\n\nexport default sideDrawer;\n","import React, { Fragment, Component, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Layout.module.scss\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\n\nconst Layout = (props) => {\n  const [showSideDrawer, setShowSideDrawer] = useState(false);\n\n  const sideDrawerClosedHandler = () => {\n    // this.setState({ showSideDrawer: false });\n    setShowSideDrawer(false);\n  };\n  const sideDrawerToggleHandler = () => {\n    // this.setState((prevState) => {\n    //   return { showSideDrawer: !prevState.showSideDrawer };\n    // });\n\n    setShowSideDrawer((prevShowSideDrawer) => !prevShowSideDrawer);\n  };\n\n  return (\n    <Fragment>\n      <Toolbar isAuth={props.isAuthenticated} drawerToggleClicked={sideDrawerToggleHandler} />\n      <SideDrawer\n        isAuth={props.isAuthenticated}\n        open={showSideDrawer}\n        closed={sideDrawerClosedHandler}\n      />\n      <main className={classes.Content}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.authReducer.token !== null,\n});\n\nexport default connect(mapStateToProps)(Layout);\n","import React from \"react\";\n\nimport classes from \"./BuildControl.module.scss\";\n\nconst buildControl = (props) => {\n  return (\n    <div className={classes.BuildControl}>\n      <div className={classes.Label}>{props.label}</div>\n      <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>\n        Less\n      </button>\n      <button className={classes.More} onClick={props.added}>\n        More\n      </button>\n    </div>\n  );\n};\n\nexport default buildControl;\n","import React from \"react\";\nimport classes from \"./BuildControls.module.scss\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n  { label: \"Salad\", type: \"salad\" },\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Meat\", type: \"meat\" },\n];\n\nconst buildControls = (props) => {\n  console.log(\"props.isAuth\", props.isAuth);\n  return (\n    <div className={classes.BuildControls}>\n      <p>\n        Current Price: <strong> {props.price.toFixed(2)} $ </strong>\n      </p>\n      {controls.map((ctrl) => {\n        return (\n          <BuildControl\n            key={ctrl.label}\n            label={ctrl.label}\n            added={() => {\n              props.ingredientAdded(ctrl.type);\n            }}\n            removed={() => {\n              props.ingredientRemoved(ctrl.type);\n            }}\n            disabled={props.disabled[ctrl.type]}\n          />\n        );\n      })}\n      <button disabled={!props.purchasable} className={classes.OrderButton} onClick={props.ordered}>\n        {props.isAuth ? \"ORDER NOW\" : \"SIGNUP  TO ORDER\"}\n      </button>\n    </div>\n  );\n};\n\nexport default buildControls;\n","import React, { Fragment, Component } from \"react\";\n// import PropTypes from \"prop-types\";\n\nimport Button from \"../../UI/Button/Button\";\n\nconst OrderSummary = (props) => {\n  // doesnt have to a class component, it was just to show the component will update console log\n  // componentWillUpdate = () => {\n  //   console.log(\"Comoponent will update\");\n  // };\n\n  //   {salad : 0,  bacon : 1, cheese : 0}\n\n  //   const keys = Object.keys(ingredientsSummary);\n  //   const values = Object.values(ingredientsSummary);\n\n  //   const transformed = keys.map((ingredient, index) => {\n  //     return (\n  //       <li>\n  //         {keys[index]} : {values[index]}\n  //       </li>\n  //     );\n  //   });\n\n  const ingredientsSummary = Object.keys(props.ingredients).map((igKey) => {\n    return (\n      <li key={igKey}>\n        <span style={{ textTransform: \"capitalize\" }}> {igKey} </span> : {props.ingredients[igKey]}\n      </li>\n    );\n  });\n\n  return (\n    <Fragment>\n      <h3>Your Order</h3>\n      <p> A delicious burger with the following ingredients : </p>\n      <ul>{ingredientsSummary}</ul>\n      <p>Continue to Checkout ?</p>\n      <p>\n        <strong>Total Price : {props.price.toFixed(2)} $ </strong>\n      </p>\n      <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>\n        CANCEL\n      </Button>\n      <Button btnType=\"Success\" clicked={props.purchaseContinued}>\n        CONTINUE\n      </Button>\n    </Fragment>\n  );\n};\n\n// OrderSummary.propTypes = {};\n\nexport default OrderSummary;\n","import React, { Component, Fragment, useEffect, useState, useCallback } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\n\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nimport * as actions from \"../../store/actions/index\";\n\nconst BurgerBuilder = (props) => {\n  //   constructor(props) {\n  //     super(props);\n  //     this.state = {};\n  //   }\n\n  // state = {\n  //   purchasing: false,\n  // };\n\n  const [purchasing, setPurchasing] = useState(false);\n\n  const ings = useSelector((state) => state.burgerBuilderReducer.ingredients);\n  const price = useSelector((state) => state.burgerBuilderReducer.totalPrice);\n  const purchasable = useSelector((state) => state.burgerBuilderReducer.purchasable);\n  const error = useSelector((state) => state.burgerBuilderReducer.error);\n  const isAuthenticated = useSelector((state) => state.authReducer.token !== null);\n\n  const dispatch = useDispatch();\n\n  const onIngredientAdded = (ingName) => dispatch(actions.addIngredient(ingName));\n  const onIngredientRemoved = (ingName) => dispatch(actions.removeIngredient(ingName));\n  const onInitIngredients = useCallback(() => dispatch(actions.initIngredients()), [dispatch]);\n  const onInitPurchase = () => dispatch(actions.purchaseInit());\n  const onResetTotalPrice = useCallback(() => dispatch(actions.resetTotalPrice()), [dispatch]);\n  const onSetAuthRedirectPath = (path) => dispatch(actions.setAuthRedirectPath(path));\n\n  // async componentDidMount() {\n  // try {\n  //   const response = await axios.get(\n  //     \"https://burger-builder-e7569.firebaseio.com/ingredients.json\"\n  //   );\n  //   const ingredients = response.data;\n  //   //    {salad : 0,\n  //   //    bacon: 0,\n  //   //    cheese : 0,\n  //   //    meat : 1 }\n  //   const ingredientsPrice = Object.keys(ingredients).map((key) => {\n  //     return ingredients[key] * INGREDIENT_PRICES[key];\n  //   });\n  //   // pour chaque clé de l'objet ingredients, on multiplie la valeur associée à la clé par le prix de l'ingrédient associé à cette clé.\n  //   const totalPrice = ingredientsPrice.reduce((acc, el) => acc + el, this.state.totalPrice);\n  //   this.setState({ ingredients, totalPrice, purchasable: true });\n  // } catch (err) {\n  //   this.setState({ error: true });\n  // }\n  // }\n\n  // componentDidMount() {\n  // }\n\n  useEffect(() => {\n    onInitIngredients();\n    onResetTotalPrice();\n    console.log(\"CDMount Burger Builder\");\n  }, [onInitIngredients, onResetTotalPrice]);\n\n  // componentDidUpdate(nextProps, nextState) {\n  //   console.log(\"CD update Burger Builder\");\n  // }\n\n  // componentWillUnmount() {\n  //   console.log(\"CW Unmount Burger Builder\");\n  // }\n\n  const purchaseHandler = () => {\n    if (isAuthenticated) {\n      // setState({ purchasing: true });\n      setPurchasing(true);\n    } else {\n      onSetAuthRedirectPath(\"/checkout\");\n      props.history.push(\"/auth\");\n    }\n  };\n\n  // updatePurchaseState = (ingredients) => {\n  //   const purchasable = Object.values(ingredients).some((amount) => amount > 0);\n  //   this.setState({ purchasable });\n  // };\n\n  const purchaseCancelHandler = () => {\n    // setState({ purchasing: false });\n    setPurchasing(false);\n  };\n\n  // purchaseContinueHandler = () => {\n  //   const queryParams = [];\n\n  //   for (let i in this.state.ingredients) {\n  //     if (this.state.ingredients.hasOwnProperty(i)) {\n  //       queryParams.push(\n  //         encodeURIComponent(i) + \"=\" + encodeURIComponent(this.state.ingredients[i])\n  //       );\n  //     }\n  //   }\n\n  //   queryParams.push(\"price=\" + this.state.totalPrice);\n\n  //   const queryString = queryParams.join(\"&\");\n\n  //   this.props.history.push({\n  //     pathname: \"/checkout\",\n  //     search: \"?\" + queryString,\n  //   });\n  // };\n  const purchaseContinueHandler = () => {\n    onInitPurchase();\n    props.history.push(\"checkout\");\n  };\n\n  const disabledInfo = { ...ings };\n  for (let key in disabledInfo) {\n    disabledInfo[key] = disabledInfo[key] <= 0;\n  }\n\n  let orderSummary = null;\n  let burger = error ? <p>Ingredients can't be loaded !</p> : <Spinner />;\n\n  if (ings) {\n    burger = (\n      <Fragment>\n        <Burger ingredients={ings} />\n        <BuildControls\n          ingredientAdded={onIngredientAdded}\n          ingredientRemoved={onIngredientRemoved}\n          disabled={disabledInfo}\n          price={price}\n          purchasable={purchasable}\n          ordered={purchaseHandler}\n          isAuth={isAuthenticated}\n        />\n      </Fragment>\n    );\n    orderSummary = (\n      <OrderSummary\n        ingredients={ings}\n        purchaseCancelled={purchaseCancelHandler}\n        purchaseContinued={purchaseContinueHandler}\n        price={price}\n      />\n    );\n  }\n\n  return (\n    <Fragment>\n      <Modal show={purchasing} modalClosed={purchaseCancelHandler}>\n        {orderSummary}\n      </Modal>\n      {burger}\n    </Fragment>\n  );\n};\n\n// const mapStateToProps = (state) => ({\n//   ings: state.burgerBuilderReducer.ingredients,\n//   price: state.burgerBuilderReducer.totalPrice,\n//   purchasable: state.burgerBuilderReducer.purchasable,\n//   error: state.burgerBuilderReducer.error,\n//   isAuthenticated: state.authReducer.token !== null,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n//   onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n//   onInitIngredients: () => dispatch(actions.initIngredients()),\n//   onInitPurchase: () => dispatch(actions.purchaseInit()),\n//   onResetTotalPrice: () => dispatch(actions.resetTotalPrice()),\n//   onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path)),\n// });\n\n// export default withErrorHandler(connect(mapStateToProps, mapDispatchToProps)(BurgerBuilder), axios);\n// export default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\nexport default withErrorHandler(BurgerBuilder, axios);\n","import React, { Component, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../../store/actions/index\";\n\nconst Logout = (props) => {\n  // componentDidMount() {\n  //   // this.props.onLogout(this.props.history);\n  //   // we could do the above, as in forward the props of this component which will be loaded by the router\n  //   // therefor we could forward this.props.history  and on the history object we we would have the push method\n\n  //   this.props.onLogout();\n  // }\n\n  useEffect(() => {\n    props.onLogout();\n  }, []);\n\n  return <Redirect to=\"/\" />;\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLogout: () => dispatch(actions.logout()),\n});\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React, { useEffect, Suspense } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\n\nconst Checkout = React.lazy(() => {\n  return import(\"./containers/Checkout/Checkout\");\n});\n\nconst Orders = React.lazy(() => {\n  return import(\"./containers/Orders/Orders\");\n});\n\nconst Auth = React.lazy(() => {\n  return import(\"./containers/Auth/Auth\");\n});\n\nconst App = (props) => {\n  // useEffect(() => {\n  //   props.onTryAutoSignup();\n  // }, []);\n\n  const { onTryAutoSignup } = props;\n  useEffect(() => {\n    onTryAutoSignup();\n    console.log(\"trying auto signup\");\n  }, [onTryAutoSignup]);\n\n  let routes = (\n    <Switch>\n      <Route path=\"/auth\" component={Auth} />\n      <Route path=\"/\" component={BurgerBuilder} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if (props.isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path=\"/checkout\" component={Checkout} />\n        <Route path=\"/orders\" component={Orders} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" component={BurgerBuilder} />\n      </Switch>\n    );\n  }\n\n  return (\n    <div>\n      <Layout>\n        <Suspense fallback={<p>Loading...</p>}>{routes} </Suspense>\n      </Layout>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.authReducer.token !== null,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTryAutoSignup: () => dispatch(actions.authCheckState()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n// not necessary ?   lecture 337\n// export default withRouter(connect(null, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  purchasable: false,\n  error: false,\n  building: false,\n};\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n};\n\nconst updatePurchaseState = (ingredients) => {\n  return Object.values(ingredients).some((amount) => amount > 0);\n};\n\n////////////// YOU CAN REFACTOR LIKE THIS ////////////////////////////////\n// (TO MAKE THE SWITCH STATEMENT LEANER)\n// I WILL ONLY DO IT FOR THE ADDINGREDIENT FUNCTION ////////////////////////////\nconst addIngredient = (state, action) => {\n  //   //   const ingredients = { ...state.ingredients };\n  //   //   ingredients[type] = state.ingredients[type] + 1;\n\n  //   //   const totalPrice = state.totalPrice + INGREDIENT_PRICES[type];\n\n  //   return {\n  //     ...state,\n  //     ingredients: {\n  //       ...state.ingredients,\n  //       [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\n  //     },\n  //     totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n  //     purchasable : updatePurchaseState()\n  //   };\n\n  let updatedIngs = { ...state.ingredients };\n  updatedIngs[action.ingredientName] = state.ingredients[action.ingredientName] + 1;\n  return {\n    ...state,\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    purchasable: updatePurchaseState(updatedIngs),\n    building: true,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      //   return {\n      //     ...state,\n      //     ingredients: {\n      //       ...state.ingredients,\n      //       [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\n      //     },\n      //     totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n      //   };\n\n      let updatedIngs2 = { ...state.ingredients };\n      updatedIngs2[action.ingredientName] = state.ingredients[action.ingredientName] - 1;\n      return {\n        ...state,\n        ingredients: updatedIngs2,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        purchasable: updatePurchaseState(updatedIngs2),\n        building: true,\n      };\n\n    case actionTypes.SET_INGREDIENT:\n      return {\n        ...state,\n        ingredients: action.ingredients,\n        error: false,\n        building: false,\n      };\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return {\n        ...state,\n        error: true,\n      };\n    case actionTypes.RESET_TOTAL_PRICE:\n      return {\n        ...state,\n        totalPrice: 4,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return {\n        ...state,\n        purchased: false,\n      };\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      // const newOrder = {\n      //   ...action.orderData,\n      //   id: action.orderId,\n      // };\n      // console.log(\"newOrder\", newOrder);\n      return {\n        ...state,\n        loading: false,\n        purchased: true,\n        // orders: state.orders.concat(newOrder),\n      };\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case actionTypes.FETCH_ORDERS_START:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return {\n        ...state,\n        orders: action.orders,\n        loading: false,\n      };\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: \"/\",\n};\n\nconst authStart = (state, action) => {\n  return {\n    ...state,\n    error: null,\n    loading: true,\n  };\n};\n\nconst authSuccess = (state, action) => {\n  return {\n    ...state,\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false,\n  };\n};\n\nconst authFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false,\n  };\n};\n\nconst authLogout = (state, action) => {\n  return {\n    ...state,\n    token: null,\n    userId: null,\n  };\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return {\n    ...state,\n    authRedirectPath: action.path,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { put, call, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport * as actions from \"../actions/index\";\n\nexport function* logoutSaga(action) {\n  yield call([localStorage, \"removeItem\"], \"token\");\n  yield call([localStorage, \"removeItem\"], \"expirationDate\");\n  yield call([localStorage, \"removeItem\"], \"userId\");\n\n  // yield localStorage.removeItem(\"token\");\n  // yield localStorage.removeItem(\"expirationDate\");\n  // yield localStorage.removeItem(\"userId\");\n\n  yield put(actions.logoutSucceed());\n}\n\nexport function* checkAuthTimeoutSaga(action) {\n  yield delay(action.expirationTime * 1000);\n  yield put(actions.logout());\n}\n\nexport function* authUserSaga(action) {\n  yield put(actions.authStart());\n\n  const authData = {\n    email: action.email,\n    password: action.password,\n    returnSecureToken: true,\n  };\n\n  let url =\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyANesr0qVAtfM1s79JzCfs7SFW70BcASBQ\";\n  if (!action.isSignup) {\n    url =\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyANesr0qVAtfM1s79JzCfs7SFW70BcASBQ\";\n  }\n\n  try {\n    const response = yield axios.post(url, authData);\n\n    console.log(response);\n    const expirationDate = yield new Date(new Date().getTime() + response.data.expiresIn * 1000);\n    yield localStorage.setItem(\"token\", response.data.idToken);\n    yield localStorage.setItem(\"expirationDate\", expirationDate);\n    yield localStorage.setItem(\"userId\", response.data.localId);\n    yield put(actions.authSuccess(response.data.idToken, response.data.localId));\n    yield put(actions.checkAuthTimeout(response.data.expiresIn));\n  } catch (error) {\n    console.log(error);\n    yield put(actions.authFail(error.response.data.error));\n  }\n}\n\nexport function* authCheckStateSaga(action) {\n  const token = yield localStorage.getItem(\"token\");\n  if (!token) {\n    yield put(actions.logout());\n  } else {\n    const expirationDate = yield new Date(localStorage.getItem(\"expirationDate\"));\n    if (expirationDate <= new Date()) {\n      yield put(actions.logout());\n    } else {\n      const userId = yield localStorage.getItem(\"userId\");\n      yield put(actions.authSuccess(token, userId));\n      yield put(actions.checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n    }\n  }\n}\n","import { put, delay } from \"redux-saga/effects\";\nimport axios from \"../../axios-orders\";\nimport * as actions from \"../actions/index\";\n\nexport function* initIngredientsSaga(action) {\n  try {\n    const response = yield axios.get(\n      \"https://burger-builder-e7569.firebaseio.com/ingredients.json\"\n    );\n    yield put(actions.setIngredients(response.data));\n    yield console.log(\"response.data from bbuilder saga\", response.data);\n  } catch (err) {\n    yield put(actions.fetchIngredientsFailed());\n  }\n}\n","import { put, delay } from \"redux-saga/effects\";\nimport axios from \"../../axios-orders\";\nimport * as actions from \"../actions/index\";\n\nexport function* purchaseBurgerSaga(action) {\n  yield put(actions.purchaseBurgerStart());\n\n  try {\n    const response = yield axios.post(\"/orders.json?auth=\" + action.token, action.orderData);\n    console.log(\"res data\", response);\n    yield put(actions.purchaseBurgerSuccess(response.data.name, action.orderData));\n  } catch (error) {\n    yield put(actions.purchaseBurgerFail(error));\n  }\n}\n\nexport function* fetchOrdersSaga(action) {\n  console.log(\"fetchedOrders\");\n  yield put(actions.fetchOrdersStart());\n  const queryParams = yield \"?auth=\" +\n    action.token +\n    '&orderBy=\"userId\"&equalTo=\"' +\n    action.userId +\n    '\"';\n\n  try {\n    const response = yield axios.get(\"/orders.json\" + queryParams);\n    console.log(\"res.data\", response.data);\n    const fetchedOrders = [];\n    for (let key in response.data) {\n      if (response.data.hasOwnProperty(key)) {\n        fetchedOrders.push({\n          ...response.data[key],\n          id: key,\n        });\n      }\n    }\n    yield put(actions.fetchOrdersSuccess(fetchedOrders));\n  } catch (err) {\n    yield put(actions.fetchOrdersFail(err));\n  }\n}\n\n// export function* initIngredientsSaga(action) {\n//   try {\n//     const response = yield axios.get(\n//       \"https://burger-builder-e7569.firebaseio.com/ingredients.json\"\n//     );\n//     yield put(actions.setIngredients(response.data));\n//   } catch (err) {\n//     yield put(actions.fetchIngredientsFailed());\n//   }\n// }\n","import { logoutSaga, checkAuthTimeoutSaga, authUserSaga, authCheckStateSaga } from \"./auth\";\nimport { initIngredientsSaga } from \"./burgerBuilder\";\nimport { fetchOrdersSaga, purchaseBurgerSaga } from \"./order\";\nimport { takeEvery, all, takeLatest } from \"redux-saga/effects\";\nimport * as actionTypes from \"../actions/actionTypes\";\n\nexport function* watchAuth() {\n  // the all function allows to execute tasks simultaneously.\n  // in this case it is not useful, but you could use call to make multiple axios request at the same time\n  yield all([\n    takeEvery(actionTypes.AUTH_INITIATE_LOGOUT, logoutSaga),\n    takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeoutSaga),\n    takeEvery(actionTypes.AUTH_USER, authUserSaga),\n    takeEvery(actionTypes.AUTH_CHECK_STATE, authCheckStateSaga),\n  ]);\n}\n\nexport function* watchBurgerBuilder() {\n  yield takeEvery(actionTypes.INIT_INGREDIENTS, initIngredientsSaga);\n}\n\nexport function* watchOrder() {\n  yield takeLatest(actionTypes.PURCHASE_BURGER, purchaseBurgerSaga);\n  // takeLatest is the equivalent of debounce function. Will only take the lastest click for exemple\n  yield takeEvery(actionTypes.FETCH_ORDERS, fetchOrdersSaga);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport App from \"./App\";\nimport \"./index.module.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport burgerBuilderReducer from \"./store/reducer/burgerBuilder\";\nimport orderReducer from \"./store/reducer/order\";\nimport authReducer from \"./store/reducer/auth\";\nimport { watchAuth, watchBurgerBuilder, watchOrder } from \"./store/sagas/index\";\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilderReducer,\n  orderReducer,\n  authReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, sagaMiddleware)));\n\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchBurgerBuilder);\nsagaMiddleware.run(watchOrder);\n\nconst app = (\n  <Provider store={store}>\n    {/* <BrowserRouter basename=\"/admin\"> */}\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}